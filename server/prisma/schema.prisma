// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Empresa {
  id          String     @id @default(uuid())
  nombre      String
  razonSocial String
  cuit        String     @unique
  domicilio   Domicilio?
  descripcion String?
  empleados   Empleado[]
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model Domicilio {
  id          String    @id @default(uuid())
  calle       String
  numero      String
  piso        String?
  depto       String?
  ciudad      String
  provincia   String
  empresaId   String?   @unique
  empresa     Empresa?  @relation(fields: [empresaId], references: [id], onDelete: Cascade)
  empleadoId  String?   @unique
  empleado    Empleado? @relation(fields: [empleadoId], references: [id], onDelete: Cascade)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Empleado {
  id            String        @id @default(uuid())
  nombre        String
  cuil         String        @unique
  dni          String        @unique
  domicilio    Domicilio?
  categoria    String?
  subCategoria String?
  fechaIngreso String
  empresaId    String
  empresa      Empresa       @relation(fields: [empresaId], references: [id], onDelete: Cascade)
  liquidaciones Liquidacion[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

model Liquidacion {
  id                    String             @id @default(uuid())
  empleadoId            String
  empleado             Empleado           @relation(fields: [empleadoId], references: [id], onDelete: Cascade)
  fecha                String
  periodo              String
  basicSalary          String
  presentismoPercentage String
  totalRemunerativo    String
  totalNoRemunerativo  String
  totalDeducciones     String
  totalNeto            String
  items                LiquidacionItem[]
  deducciones          Deduccion[]
  createdAt            DateTime           @default(now())
  updatedAt            DateTime           @updatedAt
}

model LiquidacionItem {
  id                String      @id @default(uuid())
  liquidacionId     String
  liquidacion       Liquidacion @relation(fields: [liquidacionId], references: [id], onDelete: Cascade)
  name              String
  percentage        String
  amount            String
  isRemunerative    Boolean     @default(true)
  isAttendanceRow   Boolean     @default(false)
  isSeniorityRow    Boolean     @default(false)
  referenceItemId   String?
  createdAt         DateTime    @default(now())
  updatedAt         DateTime    @updatedAt
}

model Deduccion {
  id                    String      @id @default(uuid())
  liquidacionId         String
  liquidacion           Liquidacion @relation(fields: [liquidacionId], references: [id], onDelete: Cascade)
  name                  String
  percentage            String
  checkedRemunerative   Boolean
  checkedNonRemunerative Boolean
  remunerativeAmount    String
  nonRemunerativeAmount String
  createdAt             DateTime    @default(now())
  updatedAt             DateTime    @updatedAt
}
